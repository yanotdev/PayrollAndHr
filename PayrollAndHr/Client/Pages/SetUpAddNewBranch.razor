@page "/setupaddnewbranch/"
@using PayrollAndHr.Client.Services;
@using PayrollAndHr.Shared.Models;
@layout PayrollAndHr.Client.Shared.Layouts.SetUpLayout;
@inject HttpClient _httpClient;
@inject ISetUpService _setUpService;

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>BRANCH INFORMATION</strong></div>
            <div class="card-body">
                <EditForm Model="branch" OnSubmit="SaveBranch">
                <div>
                    <button class="btn btn-primary" id="NewBranch" @onclick=@(()=>GetCode("Branch"))><i class="fa fa-file-o"></i> New</button>
                    <button class="btn btn-primary" type="submit" id="SaveBranch"><i class="fa fa-save"></i> Save</button>
                </div>
               
                
                    <br />
                    <div class="text-danger" id="successSave">
                        @BranchMessage
                    </div>
                    <fieldset class="form-group">
                        <input type="hidden" @bind="branch.ID"/>
                        <label>Code:</label>
                        <input type="text" name="code" @bind-value="branch.BranchCode" class = "form-control control-input-border" id = "code" disabled/>                        
                    </fieldset>
                    <fieldset class="form-group">

                        <label class="label-success">Branch Name:</label>
                        <input type="text" name="branchName" @bind="branch.BranchName" class = "form-control control-input-border" id = "branchName" placeholder = "Type Branch Name here"/>
                       
                    </fieldset>
                    <fieldset class="form-group">
                        <label>Address:</label>
                        <textarea  name="address" @bind="branch.Address" class = "form-control control-input-border" id = "address" placeholder = "Type Branch Address here" row=10></textarea>                        
                    </fieldset>
                    <fieldset class="form-group">
                        <label>Phone No:</label>
                        <input type="text" name="PhoneNo" @bind="branch.PhoneNo" class = "form-control control-input-border" id = "PhoneNo" placeholder = "Type Branch Phone Number here"/>
                        

                    </fieldset>
                    <fieldset class="form-group">
                        <label>E-mail Address:</label>
                        <input type="text" name="Email" @bind="branch.Email" class = "form-control control-input-border" id = "Email" placeholder = "Type Branch E-mail Address here"/>
                        
                    </fieldset>
                    @*<div class="alert alert-info" id="loading" style="padding:10px; position:absolute;border:2px solid #33bb0b;left:50%;top:50%;">
                        Please wait.. <span>
                            <img src="~/Images/ajax-loader7.gif" />
                        </span>
                    </div>*@
                    
                </EditForm>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header"><strong>LIST OF BRANCHES</strong></div>
            <table class="table table-hover table-bordered" id="BranchListTable" style="border:1px solid #000000;">
                <thead>
                    <tr>
                        <th>S/N</th>
                        <th>BRANCH NAME</th>
                        <th>CODE</th>
                        <th>PHONE NO</th>
                        <th>E-MAIL</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in branchlist)
                    {
                       
                        <tr>
                            <td>@m.ID</td>
                            <td>@m.BranchName</td>
                            <td>@m.BranchCode.ToString()</td>
                            <td>@m.PhoneNo</td>
                            <td>@m.Email</td>
                            <td style="display:flex">
                                <div @onclick=@(() => EditBranchInfo(@m.BranchCode)) title="Edit @m.BranchName"><i class="fa fa-pencil"></i></div>
                                &nbsp;&nbsp;&nbsp;
                                <div @onclick=@(()=>ShowConfirmation(@m.BranchCode)) title="Delete @m.BranchName"><i class="fa fa-trash"></i></div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    [Inject]
    public IJSRuntime JSRuntime { get; set; }

    private static List<BranchEntity>? branchlist = new List<BranchEntity>();
    private string BranchMessage = "";

    BranchEntity branch = new BranchEntity();

    protected override async Task OnInitializedAsync()
    {
        branchlist = await _httpClient.GetFromJsonAsync<List<BranchEntity>>("api/SetUp/LoadBranchInfo");
    }
    public async Task GetCode(string codeType)
    {
        if (codeType == "Branch")
        {
            var res = await _httpClient.GetStringAsync("api/SetUp/GetBranchCode");
            branch.BranchCode = int.Parse(res);
        }
    }

    public async Task SaveBranch()
    {
        var result = await _setUpService.SaveBranchInfo(branch);
        if (result != null)
        {
            BranchMessage = result.Message;
            branchlist = await _httpClient.GetFromJsonAsync<List<BranchEntity>>("api/SetUp/LoadBranchInfo");
        }
    }
    private async Task EditBranchInfo(int Code)
    {
        var brnch = await _httpClient.GetFromJsonAsync<BranchEntity>("api/Setup/EditBranch/" + Code);
        branch = brnch;
    }

  
    private async Task ShowConfirmation(int Code)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete?");

        if (confirmed)
        {
            await _httpClient.DeleteAsync("api/Setup/DeleteBranch/" + Code);
            branchlist = await _httpClient.GetFromJsonAsync<List<BranchEntity>>("api/SetUp/LoadBranchInfo");
        }
       
    }
}
