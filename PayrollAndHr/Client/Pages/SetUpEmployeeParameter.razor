@page "/setupemployeeparameter/"
@using PayrollAndHr.Client.Services;
@using PayrollAndHr.Shared.Models;
@layout PayrollAndHr.Client.Shared.Layouts.SetUpLayout
@inject ISetUpService _setUpService;

<style>
    .spacing {
        margin-top: 5px;
    }

    .txt {
        min-width: 250px;
    }
</style>
<div class="row">
    @*Staff Title Start from here*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Staff Titles</strong></div>
            <div class="card-body">
                <EditForm Model="title" OnSubmit="SaveTitleParam">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" @onclick=@(()=>GetCode("Title")) type="submit" id="NewTitle"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveTitle"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
                        
                
                    <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" style="width:100%;min-width:fit-content" @bind="title.Code" name="txtTitleCode" class = "form-control txt" id = "txtTitleCode" disabled />                            
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Title:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtTitle" style="width:100%;min-width:fit-content" @bind="title.Description" class="form-control txt" id="txtTitle" Placeholder="Type Title" />
                        </div>
                    </div>

                </EditForm>
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="titletable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>TITLE</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="titlebody">
                        @foreach(var m in titles)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.Code</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditTitle(@m.Code)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteTitle(m.Code)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    @*Employee Level Start from here*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Employee Levels</strong></div>
            <div class="card-body">
                <EditForm Model="level" OnSubmit="SaveLevels">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" @onclick=@(()=>GetCode("Level")) type="submit" id="NewLevel"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveLevel"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
                
              
                    <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtLevelCode" style="width:100%;min-width:fit-content" @bind="level.Code" class="form-control txt" id="txtLevelCode" disabled />
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Level:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtLevel" style="width:100%;min-width:fit-content" @bind="level.Description" class="form-control txt" id="txtLevel" Placeholder="Type Level" />
                        </div>
                    </div>
                </EditForm>
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="leveltable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>LEVEL</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="levelbody">
                        @foreach (var m in levels)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.Code</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditLevel(@m.Code)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteLevel(m.Code)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    @*Employment Type Start from here*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Employment Types</strong></div>
            <div class="card-body">
                <EditForm Model="employmentType" OnSubmit="SaveEmpType">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" @onclick=@(()=>GetCode("EmployementType")) type="submit" id="NewEmpTypeCode"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveempType"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
                              
                    <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtempCode" style="width:100%;min-width:fit-content" @bind="employmentType.Code" class="form-control txt" id="txtempCode" disabled />
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Description:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtempType" style="width:100%;min-width:fit-content" class="form-control txt" @bind="employmentType.Description" id="txtempType" Placeholder="Type Description" />
                        </div>
                    </div>
                </EditForm>
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="empTypetable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>DESCRIPTION</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="empTypebody">
                        @foreach (var m in employmentTypes)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.Code</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditEmpType(@m.Code)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteEmpType(m.Code)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    @*Staff Dept start from here*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Staff Department</strong></div>
            <div class="card-body">
                <EditForm Model="departmnt" OnSubmit="SaveDepartment">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" type="submit" @onclick=@(()=>GetCode("Department")) id="NewDept"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveDept"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
               
                
                    <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtDeptCode" style="width:100%;min-width:fit-content" @bind="departmnt.DeptCode" class="form-control txt" id="txtDeptCode" disabled />
                           
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Department:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtdept" style="width:100%;min-width:fit-content" @bind="departmnt.Description"class = "form-control txt" id = "txtdept" Placeholder = "Type Department" />
                            
                        </div>
                    </div>
                </EditForm>

                
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="deptTable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>DEPT</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="deptbody">
                        @foreach (var m in departments)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.DeptCode</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditDept(@m.DeptCode)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteDept(m.DeptCode)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    @*Staff Designation Start from here*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Staff Designation</strong></div>
            <div class="card-body">
                <EditForm Model="designation" OnSubmit="SaveDesignation">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" type="submit" @onclick=@(()=>GetCode("Designation")) id="NewDes"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveDes"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
                
                
                    <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtDesCode" style="width:100%;min-width:fit-content" @bind="designation.Code" class="form-control txt" id="txtDesCode" disabled />
                           
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Designation:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtDes" style="width:100%;min-width:fit-content" @bind="designation.Description" class="form-control txt" id="txtDes" Placeholder="Type Designation" />
                            
                        </div>
                    </div>
                </EditForm>

                
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="DesTable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>DESIGNATION</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="descbody">
                        @foreach (var m in designations)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.Code</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditDesignation(@m.Code)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteDesignation(m.Code)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    @*Start the Academic Degree*@
    <div class="col-md-4">
        <div class="card">
            <div class="card-header"><strong>Academic Degree</strong></div>
            <div class="card-body">
                <EditForm Model="degreeEntity" OnSubmit="SaveDegree">
                <div class="row">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-9">
                        <button class="btn btn-primary" @onclick=@(()=>GetCode("Degree")) type="submit" id="NewDeg"><i class="fa fa-file-o"></i> New</button>
                        <button class="btn btn-primary" type="submit" id="SaveDeg"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
               
               <div class="row">
                        <div class="col-md-3 spacing"><label class="form-control-label">Code:</label></div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtDegCode" style="width:100%;min-width:fit-content" @bind="degreeEntity.Code" class="form-control txt" id="txtDegCode" disabled />
                            
                        </div>
                        <div class="col-md-3 spacing">
                            <label class="form-control-label">Designation:</label>
                        </div>
                        <div class="col-md-9 spacing">
                            <input type="text" name="txtDeg" style="width:100%;min-width:fit-content" @bind="degreeEntity.Description" class="form-control txt" id="txtDeg" Placeholder="Type Degree" />
                           
                        </div>
                    </div>


                </EditForm>
                <br />
                <table class="table table-bordered table-hover table-custom-border" id="DesTable">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th>DESIGNATION</th>
                            <th>CODE</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody id="degbody">
                        @foreach (var m in degrees)
                        {
                            <tr>
                                <td>@m.ID</td>
                                <td>@m.Description</td>
                                <td>@m.Code</td>
                                <td style="display:flex">
                                    <div @onclick=@(()=>EditDegree(@m.Code)) title='Edit'><i class='fa fa-pencil'></i></div>
                                    &nbsp;&nbsp;&nbsp;
                                    <div @onclick="() => DeleteDegree(m.Code)" title="Delete"><i class="fa fa-trash"></i></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

</div>
<br />

@*<div class="alert alert-info" id="loading" style="padding:10px; position:absolute;border:2px solid #33bb0b;left:50%;top:50%;">
    Please wait.. <span>
        <img src="~/Images/ajax-loader7.gif" />
    </span>
</div>*@

@code {
    private string titleMessage = string.Empty;
    private string LevelMessage = string.Empty;
    private string EmptypeMessage = string.Empty;
    private string DepatmetMessage = string.Empty;
    private string DesignationMessage = string.Empty;
    private string DegreeMessage = string.Empty;

    TitleEntity title = new TitleEntity();
    LevelEntity level = new LevelEntity();
    DepartmentEntity departmnt = new DepartmentEntity();
    DesignationEntity designation = new DesignationEntity();
    EmploymentTypeEntity employmentType = new EmploymentTypeEntity();
    DegreeEntity degreeEntity = new DegreeEntity();

    List<TitleEntity> titles = new List<TitleEntity>();
    List<LevelEntity> levels = new List<LevelEntity>();
    List<DepartmentEntity> departments = new List<DepartmentEntity>();
    List<DegreeEntity> degrees = new List<DegreeEntity>();
    List<DesignationEntity> designations = new List<DesignationEntity>();
    List<EmploymentTypeEntity> employmentTypes = new List<EmploymentTypeEntity>();

    [Inject]
    HttpClient _httpClient { get; set; }

    public async Task GetCode(string codeType)
    {
        if (codeType == "Title")
        {
            var res = await _httpClient.GetStringAsync("api/Setup/GetTitleCode");
            title.Code = int.Parse(res);
        }
        else if(codeType == "Level")
        {
            var res = await _httpClient.GetStringAsync("api/Setup/GetLevelCode");
            level.Code = int.Parse(res);
        }
        else if(codeType == "Department")
        {
            var res = await _httpClient.GetStringAsync("api/Setup/GetDeptCode");
            departmnt.DeptCode = int.Parse(res);
        }
        else if(codeType == "Designation")
        {            
            var res = await _httpClient.GetStringAsync("api/Setup/GetDesignationCode");
            designation.Code = int.Parse(res);
        }
        else if(codeType == "EmployementType")        
        {            
            var res = await _httpClient.GetStringAsync("api/Setup/GetNextEmpTypeCode");
            employmentType.Code = int.Parse(res);
        }
        else if (codeType == "Degree")
        {
            var res = await _httpClient.GetStringAsync("api/Setup/GetDegreeCode");
            degreeEntity.Code = int.Parse(res);
        }

    }
    private async Task SaveTitleParam()
    {
        var result = await _setUpService.SaveTitle(title);
        if (result.Success)
        {
            titleMessage = result.Message;

        }
        var reslt = await _httpClient.GetAsync("api/Setup/GetTitles");
        titles = await reslt.Content.ReadFromJsonAsync<List<TitleEntity>>();
    }
    protected override async Task OnInitializedAsync()
    {
        var result = await _httpClient.GetAsync("api/Setup/GetTitles");
        titles = await result.Content.ReadFromJsonAsync<List<TitleEntity>>();

        var res1 = await _httpClient.GetAsync("api/Setup/GetLevels");
        levels = await res1.Content.ReadFromJsonAsync<List<LevelEntity>>();

        var res2 = await _httpClient.GetAsync("api/Setup/GetDepts");
        departments = await res2.Content.ReadFromJsonAsync<List<DepartmentEntity>>();

        var res3= await _httpClient.GetAsync("api/Setup/GetDegrees");
        degrees = await res3.Content.ReadFromJsonAsync<List<DegreeEntity>>();

        var res4 = await _httpClient.GetAsync("api/Setup/GetDesignation");
        designations = await res4.Content.ReadFromJsonAsync<List<DesignationEntity>>();

        var res5 = await _httpClient.GetAsync("api/Setup/GetEmpType");
        employmentTypes = await res5.Content.ReadFromJsonAsync<List<EmploymentTypeEntity>>();
    }
    private async Task EditTitle(int Code)
    {
        var result = await _httpClient.GetAsync("api/Setup/EditTitle/" + Code);
        title = await result.Content.ReadFromJsonAsync<TitleEntity>();
    }
    private async Task DeleteTitle(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteTitle/" + Code);
        var result = await _httpClient.GetAsync("api/Setup/GetTitles");
        titles = await result.Content.ReadFromJsonAsync<List<TitleEntity>>();
        //bool reslt = await result.Content.ReadFromJsonAsync<bool>();
    }
    private async Task SaveLevels()
    {
        var result = await _setUpService.SaveLevel(level);
        if (result.Success)
        {
            LevelMessage = result.Message;
        }
        var res1 = await _httpClient.GetAsync("api/Setup/GetLevels");
        levels = await res1.Content.ReadFromJsonAsync<List<LevelEntity>>();
    }

    private async Task EditLevel(int Code)
    {
        var result = await _httpClient.GetAsync("api/Setup/EditLevel/" + Code);
        level = await result.Content.ReadFromJsonAsync<LevelEntity>();
    }
    private async Task DeleteLevel(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteLevel/" + Code);
        var result = await _httpClient.GetAsync("api/Setup/GetLevels");
        levels = await result.Content.ReadFromJsonAsync<List<LevelEntity>>();        
    }
    private async Task SaveEmpType()
    {
        var result = await _setUpService.SaveEmpType(employmentType);
        if (result.Success)
        {
            EmptypeMessage = result.Message;
        }
        var res5 = await _httpClient.GetAsync("api/Setup/GetEmpType");
        employmentTypes = await res5.Content.ReadFromJsonAsync<List<EmploymentTypeEntity>>();
    }
    private async Task EditEmpType(int Code)
    {
        var result = await _httpClient.GetFromJsonAsync<EmploymentTypeEntity>("api/Setup/EditEmpType/" + Code);
        employmentType = result;
    }
    private async Task DeleteEmpType(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteEmpType/" + Code);
        var res5 = await _httpClient.GetAsync("api/Setup/GetEmpType");
        employmentTypes = await res5.Content.ReadFromJsonAsync<List<EmploymentTypeEntity>>();
    }
    private async Task SaveDepartment()
    {
        var result = await _setUpService.SaveDept(departmnt);
        if (result.Success)
        {
            DepatmetMessage = result.Message;
        }
        var res2 = await _httpClient.GetAsync("api/Setup/GetDepts");
        departments = await res2.Content.ReadFromJsonAsync<List<DepartmentEntity>>();
    }
    private async Task EditDept(int Code)
    {
        var result = await _httpClient.GetFromJsonAsync<DepartmentEntity>("api/Setup/EditDept/" + Code);
        departmnt = result;
    }
    private async Task DeleteDept(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteDept/" + Code);
        var res2 = await _httpClient.GetAsync("api/Setup/GetDepts");
        departments = await res2.Content.ReadFromJsonAsync<List<DepartmentEntity>>();
    }
    private async Task SaveDesignation()
    {
        var result = await _setUpService.SaveDesignation(designation);
        if (result.Success)
        {
            DesignationMessage = result.Message;
        }
        var res4 = await _httpClient.GetAsync("api/Setup/GetDesignation");
        designations = await res4.Content.ReadFromJsonAsync<List<DesignationEntity>>();
    }
    private async Task EditDesignation(int Code)
    {
        var result = await _httpClient.GetFromJsonAsync<DesignationEntity>("api/Setup/EditDesignation/"+ Code);
        designation = result;
    }
    private async Task DeleteDesignation(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteDesignation/" + Code);
        var res4 = await _httpClient.GetAsync("api/Setup/GetDesignation");
        designations = await res4.Content.ReadFromJsonAsync<List<DesignationEntity>>();
    }
    private async Task SaveDegree()
    {
        var result = await _setUpService.SaveDegrees(degreeEntity);
        if (result.Success)
        {
            DegreeMessage = result.Message;
        }
        var res3 = await _httpClient.GetAsync("api/Setup/GetDegrees");
        degrees = await res3.Content.ReadFromJsonAsync<List<DegreeEntity>>();
    }
    private async Task EditDegree(int Code)
    {
        var result = await _httpClient.GetFromJsonAsync<DegreeEntity>("api/Setup/EditDegree/" + Code);
        degreeEntity = result;
    }
    private async Task DeleteDegree(int Code)
    {
        await _httpClient.DeleteAsync("api/Setup/DeleteDegree/" + Code);
        var res3 = await _httpClient.GetAsync("api/Setup/GetDegrees");
        degrees = await res3.Content.ReadFromJsonAsync<List<DegreeEntity>>();
    }
}
